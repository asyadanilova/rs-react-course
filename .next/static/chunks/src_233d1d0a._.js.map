{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Asya_Danilova/Desktop/rs-react-course/src/utils/routes.ts"],"sourcesContent":["export enum AppRoutes {\n  HOME_ROUTE = '/',\n  ABOUT_ROUTE = '/about',\n  ERROR_ROUTE = '/404',\n  LOGIN_ROUTE = '/login',\n  REGISTRATION_ROUTE = '/register',\n}\n"],"names":[],"mappings":";;;AAAO,IAAA,AAAK,mCAAA;;;;;;WAAA","debugId":null}},
    {"offset": {"line": 27, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Asya_Danilova/Desktop/rs-react-course/src/hooks/useTheme.tsx"],"sourcesContent":["import { useEffect, useState } from 'react';\n\nexport function useTheme() {\n  const [theme, setTheme] = useState<'light' | 'dark'>('light');\n\n  useEffect(() => {\n    const stored = localStorage.getItem('theme');\n    if (stored === 'dark') setTheme('dark');\n  }, []);\n\n  useEffect(() => {\n    document.body.dataset.theme = theme;\n  }, [theme]);\n\n  const toggleTheme = () => {\n    setTheme((prev) => {\n      const next = prev === 'light' ? 'dark' : 'light';\n      localStorage.setItem('theme', next);\n      return next;\n    });\n  };\n\n  return { theme, toggleTheme };\n}\n"],"names":[],"mappings":";;;AAAA;;;AAEO,SAAS;;IACd,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAoB;IAErD,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;8BAAE;YACR,MAAM,SAAS,aAAa,OAAO,CAAC;YACpC,IAAI,WAAW,QAAQ,SAAS;QAClC;6BAAG,EAAE;IAEL,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;8BAAE;YACR,SAAS,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG;QAChC;6BAAG;QAAC;KAAM;IAEV,MAAM,cAAc;QAClB,SAAS,CAAC;YACR,MAAM,OAAO,SAAS,UAAU,SAAS;YACzC,aAAa,OAAO,CAAC,SAAS;YAC9B,OAAO;QACT;IACF;IAEA,OAAO;QAAE;QAAO;IAAY;AAC9B;GArBgB","debugId":null}},
    {"offset": {"line": 71, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Asya_Danilova/Desktop/rs-react-course/src/components/Header/Header.tsx"],"sourcesContent":["'use client';\n\nimport Link from 'next/link';\nimport './Header.scss';\nimport { AppRoutes } from '../../utils/routes';\nimport { useTheme } from '../../hooks/useTheme';\nimport { BsSunFill, BsMoonFill } from 'react-icons/bs';\nimport { useEffect, useState } from 'react';\nimport Image from 'next/image';\n\nconst Header = () => {\n  const navButtons = () => (\n    <ul className=\"nav_button\">\n      <li>\n        <Link href={AppRoutes.HOME_ROUTE} className=\"nav-link\">\n          <i className=\"bi bi-house\"></i> Home\n        </Link>\n      </li>\n      <li>\n        <Link href={AppRoutes.ABOUT_ROUTE} className=\"nav-link\">\n          <i className=\"bi bi-info-circle\"></i> About\n        </Link>\n      </li>\n    </ul>\n  );\n  const { theme, toggleTheme } = useTheme();\n  const [mounted, setMounted] = useState(false);\n\n  useEffect(() => {\n    setMounted(true);\n  }, []);\n\n  if (!mounted) return null;\n\n  return (\n    <header className=\"header\">\n      <Link href={AppRoutes.HOME_ROUTE} className=\"header__logo-link\">\n        <Image\n          src=\"/graduation-cap.png\"\n          alt=\"Site Icon\"\n          className=\"header__logo-icon\"\n          width={32}\n          height={32}\n        />\n        <span className=\"header__app-name\">GlobalCampus</span>\n      </Link>\n      <div style={{ display: 'flex', alignItems: 'center' }}>\n        <nav>{navButtons()}</nav>\n        <div\n          className=\"toggle-theme\"\n          onClick={toggleTheme}\n          aria-label=\"Toggle theme\"\n        >\n          {theme === 'light' ? <BsSunFill /> : <BsMoonFill />}\n        </div>\n      </div>\n    </header>\n  );\n};\n\nexport { Header };\n"],"names":[],"mappings":";;;;AAEA;AAEA;AACA;AACA;AACA;AACA;;;AARA;;;;;;;;AAUA,MAAM,SAAS;;IACb,MAAM,aAAa,kBACjB,6LAAC;YAAG,WAAU;;8BACZ,6LAAC;8BACC,cAAA,6LAAC,+JAAA,CAAA,UAAI;wBAAC,MAAM,yHAAA,CAAA,YAAS,CAAC,UAAU;wBAAE,WAAU;;0CAC1C,6LAAC;gCAAE,WAAU;;;;;;4BAAkB;;;;;;;;;;;;8BAGnC,6LAAC;8BACC,cAAA,6LAAC,+JAAA,CAAA,UAAI;wBAAC,MAAM,yHAAA,CAAA,YAAS,CAAC,WAAW;wBAAE,WAAU;;0CAC3C,6LAAC;gCAAE,WAAU;;;;;;4BAAwB;;;;;;;;;;;;;;;;;;IAK7C,MAAM,EAAE,KAAK,EAAE,WAAW,EAAE,GAAG,CAAA,GAAA,4HAAA,CAAA,WAAQ,AAAD;IACtC,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAEvC,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;4BAAE;YACR,WAAW;QACb;2BAAG,EAAE;IAEL,IAAI,CAAC,SAAS,OAAO;IAErB,qBACE,6LAAC;QAAO,WAAU;;0BAChB,6LAAC,+JAAA,CAAA,UAAI;gBAAC,MAAM,yHAAA,CAAA,YAAS,CAAC,UAAU;gBAAE,WAAU;;kCAC1C,6LAAC,gIAAA,CAAA,UAAK;wBACJ,KAAI;wBACJ,KAAI;wBACJ,WAAU;wBACV,OAAO;wBACP,QAAQ;;;;;;kCAEV,6LAAC;wBAAK,WAAU;kCAAmB;;;;;;;;;;;;0BAErC,6LAAC;gBAAI,OAAO;oBAAE,SAAS;oBAAQ,YAAY;gBAAS;;kCAClD,6LAAC;kCAAK;;;;;;kCACN,6LAAC;wBACC,WAAU;wBACV,SAAS;wBACT,cAAW;kCAEV,UAAU,wBAAU,6LAAC,iJAAA,CAAA,YAAS;;;;qFAAM,6LAAC,iJAAA,CAAA,aAAU;;;;;;;;;;;;;;;;;;;;;;AAK1D;GAhDM;;QAe2B,4HAAA,CAAA,WAAQ;;;KAfnC","debugId":null}},
    {"offset": {"line": 252, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Asya_Danilova/Desktop/rs-react-course/src/utils/consts.tsx"],"sourcesContent":["import { createContext } from 'react';\n\nexport const ITEM_PER_PAGE = 15;\nexport type Theme = 'light' | 'dark';\n\ninterface ThemeContextProps {\n  theme: Theme;\n  toggleTheme: () => void;\n}\n\nexport const ThemeContext = createContext<ThemeContextProps>({\n  theme: 'light',\n  toggleTheme: () => {},\n});\n\nexport interface University {\n  domains: string[];\n  country: string;\n  stateProvince: string | null;\n  name: string;\n  web_pages: string[];\n  alpha_two_code: string;\n}\n\nexport interface OutletContext {\n  universities: University[];\n  handleCloseDetailsPage: () => void;\n}\n"],"names":[],"mappings":";;;;AAAA;;AAEO,MAAM,gBAAgB;AAQtB,MAAM,6BAAe,CAAA,GAAA,6JAAA,CAAA,gBAAa,AAAD,EAAqB;IAC3D,OAAO;IACP,aAAa,KAAO;AACtB","debugId":null}},
    {"offset": {"line": 272, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Asya_Danilova/Desktop/rs-react-course/src/context/ThemeContext.tsx"],"sourcesContent":["'use client';\n\nimport { Theme, ThemeContext } from '../utils/consts';\nimport React, { useState, useEffect } from 'react';\n\nexport const ThemeProvider: React.FC<{ children: React.ReactNode }> = ({\n  children,\n}) => {\n  const [theme, setTheme] = useState<Theme>('light');\n\n  useEffect(() => {\n    document.body.setAttribute('data-theme', theme);\n  }, [theme]);\n\n  const toggleTheme = () =>\n    setTheme((prev) => (prev === 'light' ? 'dark' : 'light'));\n\n  return (\n    <ThemeContext.Provider value={{ theme, toggleTheme }}>\n      {children}\n    </ThemeContext.Provider>\n  );\n};\n"],"names":[],"mappings":";;;;AAEA;AACA;;;AAHA;;;AAKO,MAAM,gBAAyD;QAAC,EACrE,QAAQ,EACT;;IACC,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAS;IAE1C,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;mCAAE;YACR,SAAS,IAAI,CAAC,YAAY,CAAC,cAAc;QAC3C;kCAAG;QAAC;KAAM;IAEV,MAAM,cAAc,IAClB,SAAS,CAAC,OAAU,SAAS,UAAU,SAAS;IAElD,qBACE,6LAAC,0HAAA,CAAA,eAAY,CAAC,QAAQ;QAAC,OAAO;YAAE;YAAO;QAAY;kBAChD;;;;;;AAGP;GAjBa;KAAA","debugId":null}}]
}