{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Asya_Danilova/Desktop/rs-react-course/src/app/%5Blocale%5D/%5Bpage%5D/layout.tsx"],"sourcesContent":["'use client';\nimport React from 'react';\nimport { NextIntlClientProvider } from 'next-intl';\nimport { ThemeProvider } from '../../../context/ThemeContext';\nimport '../../../index.scss';\nimport StoreProvider from '@/app/StoreProvider';\nimport { getLocale } from 'next-intl/server';\n\nexport default async function ResultsSectionLayout({\n  children,\n}: {\n  children: React.ReactNode;\n}) {\n  const locale = await getLocale();\n\n  return (\n    <StoreProvider>\n      <ThemeProvider>\n        <NextIntlClientProvider>\n          <main>{children}</main>\n        </NextIntlClientProvider>\n      </ThemeProvider>\n    </StoreProvider>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AAEA;AACA;AANA;;;;;;;AAQe,eAAe,qBAAqB,KAIlD;QAJkD,EACjD,QAAQ,EAGT,GAJkD;IAKjD,MAAM,SAAS,MAAM,CAAA,GAAA,4NAAA,CAAA,YAAS,AAAD;IAE7B,qBACE,sNAAC,wJAAA,CAAA,UAAa;kBACZ,cAAA,sNAAC,2JAAA,CAAA,gBAAa;sBACZ,cAAA,sNAAC,+QAAA,CAAA,yBAAsB;0BACrB,cAAA,sNAAC;8BAAM;;;;;;;;;;;;;;;;;;;;;AAKjB;KAhB8B","debugId":null}},
    {"offset": {"line": 69, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Asya_Danilova/Desktop/rs-react-course/node_modules/next-intl/dist/esm/development/server/react-client/index.js"],"sourcesContent":["/**\n * Allows to import `next-intl/server` in non-RSC environments.\n *\n * This is mostly relevant for testing, since e.g. a `generateMetadata`\n * export from a page might use `next-intl/server`, but the test\n * only uses the default export for a page.\n */\n\nfunction notSupported(message) {\n  return () => {\n    throw new Error(`\\`${message}\\` is not supported in Client Components.`);\n  };\n}\nfunction getRequestConfig(\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\n...args) {\n  return notSupported('getRequestConfig');\n}\nconst getFormatter = notSupported('getFormatter');\nconst getNow = notSupported('getNow');\nconst getTimeZone = notSupported('getTimeZone');\nconst getMessages = notSupported('getMessages');\nconst getLocale = notSupported('getLocale');\n\n// The type of `getTranslations` is not assigned here because it\n// causes a type error. The types use the `react-server` entry\n// anyway, therefore this is irrelevant.\nconst getTranslations = notSupported('getTranslations');\nconst setRequestLocale = notSupported('setRequestLocale');\n\nexport { getFormatter, getLocale, getMessages, getNow, getRequestConfig, getTimeZone, getTranslations, setRequestLocale };\n"],"names":[],"mappings":"AAAA;;;;;;CAMC;;;;;;;;;;AAED,SAAS,aAAa,OAAO;IAC3B,OAAO;QACL,MAAM,IAAI,MAAM,AAAC,IAAY,OAAR,SAAQ;IAC/B;AACF;AACA,SAAS;IACT,6DAA6D;IAC7D,IAAA,IAAA,OAAA,UAAA,QAAA,AAAG,OAAH,UAAA,OAAA,OAAA,GAAA,OAAA,MAAA;QAAG,KAAH,QAAA,SAAA,CAAA,KAAO;;IACL,OAAO,aAAa;AACtB;AACA,MAAM,eAAe,aAAa;AAClC,MAAM,SAAS,aAAa;AAC5B,MAAM,cAAc,aAAa;AACjC,MAAM,cAAc,aAAa;AACjC,MAAM,YAAY,aAAa;AAE/B,gEAAgE;AAChE,8DAA8D;AAC9D,wCAAwC;AACxC,MAAM,kBAAkB,aAAa;AACrC,MAAM,mBAAmB,aAAa","ignoreList":[0],"debugId":null}}]
}