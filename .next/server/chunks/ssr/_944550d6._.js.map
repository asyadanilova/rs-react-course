{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Asya_Danilova/Desktop/rs-react-course/src/store/selectedItemsSlice.ts"],"sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\ninterface SelectedItemsState {\n  items: University[];\n}\n\nconst initialState: SelectedItemsState = { items: [] };\n\nconst selectedItemsSlice = createSlice({\n  name: 'selectedItems',\n  initialState,\n  reducers: {\n    selectItem(state, action: PayloadAction<University>) {\n      state.items.push(action.payload);\n    },\n    unselectItem(state, action: PayloadAction<string>) {\n      state.items = state.items.filter(\n        (item: University) => item.domains[0] !== action.payload\n      );\n    },\n    unselectAll(state) {\n      state.items = [];\n    },\n  },\n});\n\nexport const { selectItem, unselectItem, unselectAll } =\n  selectedItemsSlice.actions;\nexport default selectedItemsSlice.reducer;\n"],"names":[],"mappings":";;;;;;AAAA;;AAMA,MAAM,eAAmC;IAAE,OAAO,EAAE;AAAC;AAErD,MAAM,qBAAqB,CAAA,GAAA,2LAAA,CAAA,cAAW,AAAD,EAAE;IACrC,MAAM;IACN;IACA,UAAU;QACR,YAAW,KAAK,EAAE,MAAiC;YACjD,MAAM,KAAK,CAAC,IAAI,CAAC,OAAO,OAAO;QACjC;QACA,cAAa,KAAK,EAAE,MAA6B;YAC/C,MAAM,KAAK,GAAG,MAAM,KAAK,CAAC,MAAM,CAC9B,CAAC,OAAqB,KAAK,OAAO,CAAC,EAAE,KAAK,OAAO,OAAO;QAE5D;QACA,aAAY,KAAK;YACf,MAAM,KAAK,GAAG,EAAE;QAClB;IACF;AACF;AAEO,MAAM,EAAE,UAAU,EAAE,YAAY,EAAE,WAAW,EAAE,GACpD,mBAAmB,OAAO;uCACb,mBAAmB,OAAO","debugId":null}},
    {"offset": {"line": 37, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Asya_Danilova/Desktop/rs-react-course/src/store/searchSlice.tsx"],"sourcesContent":["import { University } from '@/utils/consts';\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\ninterface SearchState {\n  searchTerm: string;\n  universities: University[];\n  currentPage: number;\n}\n\nconst initialState: SearchState = {\n  searchTerm: '',\n  universities: [],\n  currentPage: 1,\n};\n\nconst searchSlice = createSlice({\n  name: 'search',\n  initialState,\n  reducers: {\n    setSearchTerm(state, action: PayloadAction<string>) {\n      state.searchTerm = action.payload;\n    },\n    setUniversities(state, action: PayloadAction<University[]>) {\n      state.universities = action.payload;\n    },\n    setCurrentPage(state, action: PayloadAction<number>) {\n      state.currentPage = action.payload;\n    },\n  },\n});\n\nexport const { setSearchTerm, setUniversities, setCurrentPage } =\n  searchSlice.actions;\nexport default searchSlice.reducer;\n"],"names":[],"mappings":";;;;;;AACA;;AAQA,MAAM,eAA4B;IAChC,YAAY;IACZ,cAAc,EAAE;IAChB,aAAa;AACf;AAEA,MAAM,cAAc,CAAA,GAAA,2LAAA,CAAA,cAAW,AAAD,EAAE;IAC9B,MAAM;IACN;IACA,UAAU;QACR,eAAc,KAAK,EAAE,MAA6B;YAChD,MAAM,UAAU,GAAG,OAAO,OAAO;QACnC;QACA,iBAAgB,KAAK,EAAE,MAAmC;YACxD,MAAM,YAAY,GAAG,OAAO,OAAO;QACrC;QACA,gBAAe,KAAK,EAAE,MAA6B;YACjD,MAAM,WAAW,GAAG,OAAO,OAAO;QACpC;IACF;AACF;AAEO,MAAM,EAAE,aAAa,EAAE,eAAe,EAAE,cAAc,EAAE,GAC7D,YAAY,OAAO;uCACN,YAAY,OAAO","debugId":null}},
    {"offset": {"line": 71, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Asya_Danilova/Desktop/rs-react-course/src/services/university.tsx"],"sourcesContent":["import { University } from '@/utils/consts';\nimport { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\n\nexport const universityApi = createApi({\n  reducerPath: 'universityApi',\n  baseQuery: fetchBaseQuery({ baseUrl: '/api' }),\n  endpoints: (builder) => ({\n    searchUniversities: builder.query<\n      University[],\n      { country: string; searchKey: number }\n    >({\n      query: ({ country }) => `/search?&country=${country}`,\n    }),\n    getUniversities: builder.query<University[], undefined>({\n      query: () => `/search?&limit=15`,\n    }),\n  }),\n});\n\nexport const { useSearchUniversitiesQuery, useGetUniversitiesQuery } =\n  universityApi;\n"],"names":[],"mappings":";;;;;AACA;AAAA;;AAEO,MAAM,gBAAgB,CAAA,GAAA,kNAAA,CAAA,YAAS,AAAD,EAAE;IACrC,aAAa;IACb,WAAW,CAAA,GAAA,gLAAA,CAAA,iBAAc,AAAD,EAAE;QAAE,SAAS;IAAO;IAC5C,WAAW,CAAC,UAAY,CAAC;YACvB,oBAAoB,QAAQ,KAAK,CAG/B;gBACA,OAAO,CAAC,EAAE,OAAO,EAAE,GAAK,CAAC,iBAAiB,EAAE,SAAS;YACvD;YACA,iBAAiB,QAAQ,KAAK,CAA0B;gBACtD,OAAO,IAAM,CAAC,iBAAiB,CAAC;YAClC;QACF,CAAC;AACH;AAEO,MAAM,EAAE,0BAA0B,EAAE,uBAAuB,EAAE,GAClE","debugId":null}},
    {"offset": {"line": 98, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Asya_Danilova/Desktop/rs-react-course/src/store/store.ts"],"sourcesContent":["import { configureStore } from '@reduxjs/toolkit';\nimport selectedItemsReducer from './selectedItemsSlice';\nimport searchReducer from './searchSlice';\nimport { setupListeners } from '@reduxjs/toolkit/query';\nimport { universityApi } from '../services/university';\n\nexport const store = configureStore({\n  reducer: {\n    selectedItems: selectedItemsReducer,\n    search: searchReducer,\n    [universityApi.reducerPath]: universityApi.reducer,\n  },\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware().concat(universityApi.middleware),\n});\n\nsetupListeners(store.dispatch);\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n"],"names":[],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;;;;;;AAEO,MAAM,QAAQ,CAAA,GAAA,2LAAA,CAAA,iBAAc,AAAD,EAAE;IAClC,SAAS;QACP,eAAe,kIAAA,CAAA,UAAoB;QACnC,QAAQ,4HAAA,CAAA,UAAa;QACrB,CAAC,8HAAA,CAAA,gBAAa,CAAC,WAAW,CAAC,EAAE,8HAAA,CAAA,gBAAa,CAAC,OAAO;IACpD;IACA,YAAY,CAAC,uBACX,uBAAuB,MAAM,CAAC,8HAAA,CAAA,gBAAa,CAAC,UAAU;AAC1D;AAEA,CAAA,GAAA,gLAAA,CAAA,iBAAc,AAAD,EAAE,MAAM,QAAQ","debugId":null}},
    {"offset": {"line": 124, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Asya_Danilova/Desktop/rs-react-course/src/context/ThemeContext.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const ThemeProvider = registerClientReference(\n    function() { throw new Error(\"Attempted to call ThemeProvider() from the server but ThemeProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/context/ThemeContext.tsx <module evaluation>\",\n    \"ThemeProvider\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,gBAAgB,CAAA,GAAA,6OAAA,CAAA,0BAAuB,AAAD,EAC/C;IAAa,MAAM,IAAI,MAAM;AAA0O,GACvQ,8DACA","debugId":null}},
    {"offset": {"line": 136, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Asya_Danilova/Desktop/rs-react-course/src/context/ThemeContext.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const ThemeProvider = registerClientReference(\n    function() { throw new Error(\"Attempted to call ThemeProvider() from the server but ThemeProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/context/ThemeContext.tsx\",\n    \"ThemeProvider\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,gBAAgB,CAAA,GAAA,6OAAA,CAAA,0BAAuB,AAAD,EAC/C;IAAa,MAAM,IAAI,MAAM;AAA0O,GACvQ,0CACA","debugId":null}},
    {"offset": {"line": 148, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}}]
}